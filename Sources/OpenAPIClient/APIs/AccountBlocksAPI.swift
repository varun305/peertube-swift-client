//
// AccountBlocksAPI.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation

open class AccountBlocksAPI {

    /**
     Get block status of accounts/hosts
     
     - parameter accounts: (query) Check if these accounts are blocked (optional)
     - parameter hosts: (query) Check if these hosts are blocked (optional)
     - parameter apiConfiguration: The configuration for the http request.
     - returns: BlockStatus
     */
    @available(macOS 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
    open class func apiV1BlocklistStatusGet(accounts: [String]? = nil, hosts: [String]? = nil, apiConfiguration: OpenAPIClientAPIConfiguration = OpenAPIClientAPIConfiguration.shared) async throws(ErrorResponse) -> BlockStatus {
        return try await apiV1BlocklistStatusGetWithRequestBuilder(accounts: accounts, hosts: hosts, apiConfiguration: apiConfiguration).execute().body
    }

    /**
     Get block status of accounts/hosts
     - GET /api/v1/blocklist/status
     - parameter accounts: (query) Check if these accounts are blocked (optional)
     - parameter hosts: (query) Check if these hosts are blocked (optional)
     - parameter apiConfiguration: The configuration for the http request.
     - returns: RequestBuilder<BlockStatus> 
     */
    open class func apiV1BlocklistStatusGetWithRequestBuilder(accounts: [String]? = nil, hosts: [String]? = nil, apiConfiguration: OpenAPIClientAPIConfiguration = OpenAPIClientAPIConfiguration.shared) -> RequestBuilder<BlockStatus> {
        let localVariablePath = "/api/v1/blocklist/status"
        let localVariableURLString = apiConfiguration.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "accounts": (wrappedValue: accounts?.encodeToJSON(codableHelper: apiConfiguration.codableHelper), isExplode: true),
            "hosts": (wrappedValue: hosts?.encodeToJSON(codableHelper: apiConfiguration.codableHelper), isExplode: true),
        ])

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<BlockStatus>.Type = apiConfiguration.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: false, apiConfiguration: apiConfiguration)
    }

    /**
     Unblock an account by its handle
     
     - parameter accountName: (path) account to unblock, in the form &#x60;username@domain&#x60; 
     - parameter apiConfiguration: The configuration for the http request.
     - returns: Void
     */
    @available(macOS 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
    open class func apiV1ServerBlocklistAccountsAccountNameDelete(accountName: String, apiConfiguration: OpenAPIClientAPIConfiguration = OpenAPIClientAPIConfiguration.shared) async throws(ErrorResponse) {
        return try await apiV1ServerBlocklistAccountsAccountNameDeleteWithRequestBuilder(accountName: accountName, apiConfiguration: apiConfiguration).execute().body
    }

    /**
     Unblock an account by its handle
     - DELETE /api/v1/server/blocklist/accounts/{accountName}
     - OAuth:
       - type: oauth2
       - name: OAuth2
     - parameter accountName: (path) account to unblock, in the form &#x60;username@domain&#x60; 
     - parameter apiConfiguration: The configuration for the http request.
     - returns: RequestBuilder<Void> 
     */
    open class func apiV1ServerBlocklistAccountsAccountNameDeleteWithRequestBuilder(accountName: String, apiConfiguration: OpenAPIClientAPIConfiguration = OpenAPIClientAPIConfiguration.shared) -> RequestBuilder<Void> {
        var localVariablePath = "/api/v1/server/blocklist/accounts/{accountName}"
        let accountNamePreEscape = "\(APIHelper.mapValueToPathItem(accountName))"
        let accountNamePostEscape = accountNamePreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{accountName}", with: accountNamePostEscape, options: .literal, range: nil)
        let localVariableURLString = apiConfiguration.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<Void>.Type = apiConfiguration.requestBuilderFactory.getNonDecodableBuilder()

        return localVariableRequestBuilder.init(method: "DELETE", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true, apiConfiguration: apiConfiguration)
    }

    /**
     List account blocks
     
     - parameter start: (query) Offset used to paginate results (optional)
     - parameter count: (query) Number of items to return (optional, default to 15)
     - parameter sort: (query) Sort column (optional)
     - parameter apiConfiguration: The configuration for the http request.
     - returns: Void
     */
    @available(macOS 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
    open class func apiV1ServerBlocklistAccountsGet(start: Int? = nil, count: Int? = nil, sort: String? = nil, apiConfiguration: OpenAPIClientAPIConfiguration = OpenAPIClientAPIConfiguration.shared) async throws(ErrorResponse) {
        return try await apiV1ServerBlocklistAccountsGetWithRequestBuilder(start: start, count: count, sort: sort, apiConfiguration: apiConfiguration).execute().body
    }

    /**
     List account blocks
     - GET /api/v1/server/blocklist/accounts
     - OAuth:
       - type: oauth2
       - name: OAuth2
     - parameter start: (query) Offset used to paginate results (optional)
     - parameter count: (query) Number of items to return (optional, default to 15)
     - parameter sort: (query) Sort column (optional)
     - parameter apiConfiguration: The configuration for the http request.
     - returns: RequestBuilder<Void> 
     */
    open class func apiV1ServerBlocklistAccountsGetWithRequestBuilder(start: Int? = nil, count: Int? = nil, sort: String? = nil, apiConfiguration: OpenAPIClientAPIConfiguration = OpenAPIClientAPIConfiguration.shared) -> RequestBuilder<Void> {
        let localVariablePath = "/api/v1/server/blocklist/accounts"
        let localVariableURLString = apiConfiguration.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "start": (wrappedValue: start?.encodeToJSON(codableHelper: apiConfiguration.codableHelper), isExplode: true),
            "count": (wrappedValue: count?.encodeToJSON(codableHelper: apiConfiguration.codableHelper), isExplode: true),
            "sort": (wrappedValue: sort?.encodeToJSON(codableHelper: apiConfiguration.codableHelper), isExplode: true),
        ])

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<Void>.Type = apiConfiguration.requestBuilderFactory.getNonDecodableBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true, apiConfiguration: apiConfiguration)
    }

    /**
     Block an account
     
     - parameter apiV1ServerBlocklistAccountsPostRequest: (body)  (optional)
     - parameter apiConfiguration: The configuration for the http request.
     - returns: Void
     */
    @available(macOS 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
    open class func apiV1ServerBlocklistAccountsPost(apiV1ServerBlocklistAccountsPostRequest: ApiV1ServerBlocklistAccountsPostRequest? = nil, apiConfiguration: OpenAPIClientAPIConfiguration = OpenAPIClientAPIConfiguration.shared) async throws(ErrorResponse) {
        return try await apiV1ServerBlocklistAccountsPostWithRequestBuilder(apiV1ServerBlocklistAccountsPostRequest: apiV1ServerBlocklistAccountsPostRequest, apiConfiguration: apiConfiguration).execute().body
    }

    /**
     Block an account
     - POST /api/v1/server/blocklist/accounts
     - OAuth:
       - type: oauth2
       - name: OAuth2
     - parameter apiV1ServerBlocklistAccountsPostRequest: (body)  (optional)
     - parameter apiConfiguration: The configuration for the http request.
     - returns: RequestBuilder<Void> 
     */
    open class func apiV1ServerBlocklistAccountsPostWithRequestBuilder(apiV1ServerBlocklistAccountsPostRequest: ApiV1ServerBlocklistAccountsPostRequest? = nil, apiConfiguration: OpenAPIClientAPIConfiguration = OpenAPIClientAPIConfiguration.shared) -> RequestBuilder<Void> {
        let localVariablePath = "/api/v1/server/blocklist/accounts"
        let localVariableURLString = apiConfiguration.basePath + localVariablePath
        let localVariableParameters = JSONEncodingHelper.encodingParameters(forEncodableObject: apiV1ServerBlocklistAccountsPostRequest, codableHelper: apiConfiguration.codableHelper)

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            "Content-Type": "application/json",
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<Void>.Type = apiConfiguration.requestBuilderFactory.getNonDecodableBuilder()

        return localVariableRequestBuilder.init(method: "POST", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true, apiConfiguration: apiConfiguration)
    }
}
