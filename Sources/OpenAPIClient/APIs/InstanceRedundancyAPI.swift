//
// InstanceRedundancyAPI.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation

open class InstanceRedundancyAPI {

    /**
     Update a server redundancy policy
     
     - parameter host: (path) server domain to mirror 
     - parameter apiV1ServerRedundancyHostPutRequest: (body)  (optional)
     - parameter apiConfiguration: The configuration for the http request.
     - returns: Void
     */
    @available(macOS 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
    open class func apiV1ServerRedundancyHostPut(host: String, apiV1ServerRedundancyHostPutRequest: ApiV1ServerRedundancyHostPutRequest? = nil, apiConfiguration: OpenAPIClientAPIConfiguration = OpenAPIClientAPIConfiguration.shared) async throws(ErrorResponse) {
        return try await apiV1ServerRedundancyHostPutWithRequestBuilder(host: host, apiV1ServerRedundancyHostPutRequest: apiV1ServerRedundancyHostPutRequest, apiConfiguration: apiConfiguration).execute().body
    }

    /**
     Update a server redundancy policy
     - PUT /api/v1/server/redundancy/{host}
     - OAuth:
       - type: oauth2
       - name: OAuth2
     - parameter host: (path) server domain to mirror 
     - parameter apiV1ServerRedundancyHostPutRequest: (body)  (optional)
     - parameter apiConfiguration: The configuration for the http request.
     - returns: RequestBuilder<Void> 
     */
    open class func apiV1ServerRedundancyHostPutWithRequestBuilder(host: String, apiV1ServerRedundancyHostPutRequest: ApiV1ServerRedundancyHostPutRequest? = nil, apiConfiguration: OpenAPIClientAPIConfiguration = OpenAPIClientAPIConfiguration.shared) -> RequestBuilder<Void> {
        var localVariablePath = "/api/v1/server/redundancy/{host}"
        let hostPreEscape = "\(APIHelper.mapValueToPathItem(host))"
        let hostPostEscape = hostPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{host}", with: hostPostEscape, options: .literal, range: nil)
        let localVariableURLString = apiConfiguration.basePath + localVariablePath
        let localVariableParameters = JSONEncodingHelper.encodingParameters(forEncodableObject: apiV1ServerRedundancyHostPutRequest, codableHelper: apiConfiguration.codableHelper)

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            "Content-Type": "application/json",
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<Void>.Type = apiConfiguration.requestBuilderFactory.getNonDecodableBuilder()

        return localVariableRequestBuilder.init(method: "PUT", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true, apiConfiguration: apiConfiguration)
    }
}
