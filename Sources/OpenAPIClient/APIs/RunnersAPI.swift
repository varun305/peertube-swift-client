//
// RunnersAPI.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation

open class RunnersAPI {

    /**
     * enum for parameter sort
     */
    public enum Sort_apiV1RunnersGet: String, Sendable, CaseIterable {
        case createdat = "createdAt"
    }

    /**
     List runners
     
     - parameter start: (query) Offset used to paginate results (optional)
     - parameter count: (query) Number of items to return (optional, default to 15)
     - parameter sort: (query) Sort runners by criteria (optional)
     - parameter apiConfiguration: The configuration for the http request.
     - returns: ApiV1RunnersGet200Response
     */
    @available(macOS 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
    open class func apiV1RunnersGet(start: Int? = nil, count: Int? = nil, sort: Sort_apiV1RunnersGet? = nil, apiConfiguration: OpenAPIClientAPIConfiguration = OpenAPIClientAPIConfiguration.shared) async throws(ErrorResponse) -> ApiV1RunnersGet200Response {
        return try await apiV1RunnersGetWithRequestBuilder(start: start, count: count, sort: sort, apiConfiguration: apiConfiguration).execute().body
    }

    /**
     List runners
     - GET /api/v1/runners
     - OAuth:
       - type: oauth2
       - name: OAuth2
     - parameter start: (query) Offset used to paginate results (optional)
     - parameter count: (query) Number of items to return (optional, default to 15)
     - parameter sort: (query) Sort runners by criteria (optional)
     - parameter apiConfiguration: The configuration for the http request.
     - returns: RequestBuilder<ApiV1RunnersGet200Response> 
     */
    open class func apiV1RunnersGetWithRequestBuilder(start: Int? = nil, count: Int? = nil, sort: Sort_apiV1RunnersGet? = nil, apiConfiguration: OpenAPIClientAPIConfiguration = OpenAPIClientAPIConfiguration.shared) -> RequestBuilder<ApiV1RunnersGet200Response> {
        let localVariablePath = "/api/v1/runners"
        let localVariableURLString = apiConfiguration.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "start": (wrappedValue: start?.encodeToJSON(codableHelper: apiConfiguration.codableHelper), isExplode: true),
            "count": (wrappedValue: count?.encodeToJSON(codableHelper: apiConfiguration.codableHelper), isExplode: true),
            "sort": (wrappedValue: sort?.encodeToJSON(codableHelper: apiConfiguration.codableHelper), isExplode: true),
        ])

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<ApiV1RunnersGet200Response>.Type = apiConfiguration.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true, apiConfiguration: apiConfiguration)
    }

    /**
     Register a new runner
     
     - parameter apiV1RunnersRegisterPostRequest: (body)  (optional)
     - parameter apiConfiguration: The configuration for the http request.
     - returns: ApiV1RunnersRegisterPost200Response
     */
    @available(macOS 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
    open class func apiV1RunnersRegisterPost(apiV1RunnersRegisterPostRequest: ApiV1RunnersRegisterPostRequest? = nil, apiConfiguration: OpenAPIClientAPIConfiguration = OpenAPIClientAPIConfiguration.shared) async throws(ErrorResponse) -> ApiV1RunnersRegisterPost200Response {
        return try await apiV1RunnersRegisterPostWithRequestBuilder(apiV1RunnersRegisterPostRequest: apiV1RunnersRegisterPostRequest, apiConfiguration: apiConfiguration).execute().body
    }

    /**
     Register a new runner
     - POST /api/v1/runners/register
     - API used by PeerTube runners
     - parameter apiV1RunnersRegisterPostRequest: (body)  (optional)
     - parameter apiConfiguration: The configuration for the http request.
     - returns: RequestBuilder<ApiV1RunnersRegisterPost200Response> 
     */
    open class func apiV1RunnersRegisterPostWithRequestBuilder(apiV1RunnersRegisterPostRequest: ApiV1RunnersRegisterPostRequest? = nil, apiConfiguration: OpenAPIClientAPIConfiguration = OpenAPIClientAPIConfiguration.shared) -> RequestBuilder<ApiV1RunnersRegisterPost200Response> {
        let localVariablePath = "/api/v1/runners/register"
        let localVariableURLString = apiConfiguration.basePath + localVariablePath
        let localVariableParameters = JSONEncodingHelper.encodingParameters(forEncodableObject: apiV1RunnersRegisterPostRequest, codableHelper: apiConfiguration.codableHelper)

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            "Content-Type": "application/json",
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<ApiV1RunnersRegisterPost200Response>.Type = apiConfiguration.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "POST", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: false, apiConfiguration: apiConfiguration)
    }

    /**
     Delete a runner
     
     - parameter runnerId: (path)  
     - parameter apiV1RunnersUnregisterPostRequest: (body)  (optional)
     - parameter apiConfiguration: The configuration for the http request.
     - returns: Void
     */
    @available(macOS 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
    open class func apiV1RunnersRunnerIdDelete(runnerId: Int, apiV1RunnersUnregisterPostRequest: ApiV1RunnersUnregisterPostRequest? = nil, apiConfiguration: OpenAPIClientAPIConfiguration = OpenAPIClientAPIConfiguration.shared) async throws(ErrorResponse) {
        return try await apiV1RunnersRunnerIdDeleteWithRequestBuilder(runnerId: runnerId, apiV1RunnersUnregisterPostRequest: apiV1RunnersUnregisterPostRequest, apiConfiguration: apiConfiguration).execute().body
    }

    /**
     Delete a runner
     - DELETE /api/v1/runners/{runnerId}
     - OAuth:
       - type: oauth2
       - name: OAuth2
     - parameter runnerId: (path)  
     - parameter apiV1RunnersUnregisterPostRequest: (body)  (optional)
     - parameter apiConfiguration: The configuration for the http request.
     - returns: RequestBuilder<Void> 
     */
    open class func apiV1RunnersRunnerIdDeleteWithRequestBuilder(runnerId: Int, apiV1RunnersUnregisterPostRequest: ApiV1RunnersUnregisterPostRequest? = nil, apiConfiguration: OpenAPIClientAPIConfiguration = OpenAPIClientAPIConfiguration.shared) -> RequestBuilder<Void> {
        var localVariablePath = "/api/v1/runners/{runnerId}"
        let runnerIdPreEscape = "\(APIHelper.mapValueToPathItem(runnerId))"
        let runnerIdPostEscape = runnerIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{runnerId}", with: runnerIdPostEscape, options: .literal, range: nil)
        let localVariableURLString = apiConfiguration.basePath + localVariablePath
        let localVariableParameters = JSONEncodingHelper.encodingParameters(forEncodableObject: apiV1RunnersUnregisterPostRequest, codableHelper: apiConfiguration.codableHelper)

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            "Content-Type": "application/json",
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<Void>.Type = apiConfiguration.requestBuilderFactory.getNonDecodableBuilder()

        return localVariableRequestBuilder.init(method: "DELETE", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true, apiConfiguration: apiConfiguration)
    }

    /**
     Unregister a runner
     
     - parameter apiV1RunnersUnregisterPostRequest: (body)  (optional)
     - parameter apiConfiguration: The configuration for the http request.
     - returns: Void
     */
    @available(macOS 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
    open class func apiV1RunnersUnregisterPost(apiV1RunnersUnregisterPostRequest: ApiV1RunnersUnregisterPostRequest? = nil, apiConfiguration: OpenAPIClientAPIConfiguration = OpenAPIClientAPIConfiguration.shared) async throws(ErrorResponse) {
        return try await apiV1RunnersUnregisterPostWithRequestBuilder(apiV1RunnersUnregisterPostRequest: apiV1RunnersUnregisterPostRequest, apiConfiguration: apiConfiguration).execute().body
    }

    /**
     Unregister a runner
     - POST /api/v1/runners/unregister
     - API used by PeerTube runners
     - parameter apiV1RunnersUnregisterPostRequest: (body)  (optional)
     - parameter apiConfiguration: The configuration for the http request.
     - returns: RequestBuilder<Void> 
     */
    open class func apiV1RunnersUnregisterPostWithRequestBuilder(apiV1RunnersUnregisterPostRequest: ApiV1RunnersUnregisterPostRequest? = nil, apiConfiguration: OpenAPIClientAPIConfiguration = OpenAPIClientAPIConfiguration.shared) -> RequestBuilder<Void> {
        let localVariablePath = "/api/v1/runners/unregister"
        let localVariableURLString = apiConfiguration.basePath + localVariablePath
        let localVariableParameters = JSONEncodingHelper.encodingParameters(forEncodableObject: apiV1RunnersUnregisterPostRequest, codableHelper: apiConfiguration.codableHelper)

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            "Content-Type": "application/json",
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<Void>.Type = apiConfiguration.requestBuilderFactory.getNonDecodableBuilder()

        return localVariableRequestBuilder.init(method: "POST", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: false, apiConfiguration: apiConfiguration)
    }
}
