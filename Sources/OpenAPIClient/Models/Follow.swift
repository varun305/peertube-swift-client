//
// Follow.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation

public struct Follow: Sendable, Codable, JSONEncodable, Hashable {

    public enum State: String, Sendable, Codable, CaseIterable {
        case pending = "pending"
        case accepted = "accepted"
    }
    public static let idRule = NumericRule<Int>(minimum: 1, exclusiveMinimum: false, maximum: nil, exclusiveMaximum: false, multipleOf: nil)
    public var id: Int?
    public var follower: Actor?
    public var following: Actor?
    /** score reflecting the reachability of the actor, with steps of `10` and a base score of `1000`. */
    public var score: Double?
    public var state: State?
    public var createdAt: Date?
    public var updatedAt: Date?

    public init(id: Int? = nil, follower: Actor? = nil, following: Actor? = nil, score: Double? = nil, state: State? = nil, createdAt: Date? = nil, updatedAt: Date? = nil) {
        self.id = id
        self.follower = follower
        self.following = following
        self.score = score
        self.state = state
        self.createdAt = createdAt
        self.updatedAt = updatedAt
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case id
        case follower
        case following
        case score
        case state
        case createdAt
        case updatedAt
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(id, forKey: .id)
        try container.encodeIfPresent(follower, forKey: .follower)
        try container.encodeIfPresent(following, forKey: .following)
        try container.encodeIfPresent(score, forKey: .score)
        try container.encodeIfPresent(state, forKey: .state)
        try container.encodeIfPresent(createdAt, forKey: .createdAt)
        try container.encodeIfPresent(updatedAt, forKey: .updatedAt)
    }
}


@available(iOS 13, tvOS 13, watchOS 6, macOS 10.15, *)
extension Follow: Identifiable {}
