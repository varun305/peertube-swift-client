//
// ListUserExports200Response.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation

public struct ListUserExports200Response: Sendable, Codable, JSONEncodable, Hashable {

    public var id: Int?
    public var state: ListUserExports200ResponseState?
    /** Size of the archive file in bytes */
    public var size: Int?
    /** This URL already contains the JWT token, so no additional authentication credentials are required */
    public var privateDownloadUrl: String?
    public var createdAt: Date?
    public var expiresOn: Date?

    public init(id: Int? = nil, state: ListUserExports200ResponseState? = nil, size: Int? = nil, privateDownloadUrl: String? = nil, createdAt: Date? = nil, expiresOn: Date? = nil) {
        self.id = id
        self.state = state
        self.size = size
        self.privateDownloadUrl = privateDownloadUrl
        self.createdAt = createdAt
        self.expiresOn = expiresOn
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case id
        case state
        case size
        case privateDownloadUrl
        case createdAt
        case expiresOn
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(id, forKey: .id)
        try container.encodeIfPresent(state, forKey: .state)
        try container.encodeIfPresent(size, forKey: .size)
        try container.encodeIfPresent(privateDownloadUrl, forKey: .privateDownloadUrl)
        try container.encodeIfPresent(createdAt, forKey: .createdAt)
        try container.encodeIfPresent(expiresOn, forKey: .expiresOn)
    }
}


@available(iOS 13, tvOS 13, watchOS 6, macOS 10.15, *)
extension ListUserExports200Response: Identifiable {}
