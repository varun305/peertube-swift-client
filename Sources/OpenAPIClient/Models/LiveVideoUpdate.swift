//
// LiveVideoUpdate.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation

public struct LiveVideoUpdate: Sendable, Codable, JSONEncodable, Hashable {

    public var saveReplay: Bool?
    public var replaySettings: LiveVideoReplaySettings?
    /** User can stream multiple times in a permanent live */
    public var permanentLive: Bool?
    public var latencyMode: LiveVideoLatencyMode?

    public init(saveReplay: Bool? = nil, replaySettings: LiveVideoReplaySettings? = nil, permanentLive: Bool? = nil, latencyMode: LiveVideoLatencyMode? = nil) {
        self.saveReplay = saveReplay
        self.replaySettings = replaySettings
        self.permanentLive = permanentLive
        self.latencyMode = latencyMode
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case saveReplay
        case replaySettings
        case permanentLive
        case latencyMode
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(saveReplay, forKey: .saveReplay)
        try container.encodeIfPresent(replaySettings, forKey: .replaySettings)
        try container.encodeIfPresent(permanentLive, forKey: .permanentLive)
        try container.encodeIfPresent(latencyMode, forKey: .latencyMode)
    }
}

