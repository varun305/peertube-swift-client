//
// Plugin.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation

public struct Plugin: Sendable, Codable, JSONEncodable, Hashable {

    public enum ModelType: Int, Sendable, Codable, CaseIterable {
        case _1 = 1
        case _2 = 2
    }
    public var name: String?
    /** - `1`: PLUGIN - `2`: THEME  */
    public var type: ModelType?
    public var latestVersion: String?
    public var version: String?
    public var enabled: Bool?
    public var uninstalled: Bool?
    public var peertubeEngine: String?
    public var description: String?
    public var homepage: String?
    public var settings: [String: JSONValue]?
    public var createdAt: Date?
    public var updatedAt: Date?

    public init(name: String? = nil, type: ModelType? = nil, latestVersion: String? = nil, version: String? = nil, enabled: Bool? = nil, uninstalled: Bool? = nil, peertubeEngine: String? = nil, description: String? = nil, homepage: String? = nil, settings: [String: JSONValue]? = nil, createdAt: Date? = nil, updatedAt: Date? = nil) {
        self.name = name
        self.type = type
        self.latestVersion = latestVersion
        self.version = version
        self.enabled = enabled
        self.uninstalled = uninstalled
        self.peertubeEngine = peertubeEngine
        self.description = description
        self.homepage = homepage
        self.settings = settings
        self.createdAt = createdAt
        self.updatedAt = updatedAt
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case name
        case type
        case latestVersion
        case version
        case enabled
        case uninstalled
        case peertubeEngine
        case description
        case homepage
        case settings
        case createdAt
        case updatedAt
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(name, forKey: .name)
        try container.encodeIfPresent(type, forKey: .type)
        try container.encodeIfPresent(latestVersion, forKey: .latestVersion)
        try container.encodeIfPresent(version, forKey: .version)
        try container.encodeIfPresent(enabled, forKey: .enabled)
        try container.encodeIfPresent(uninstalled, forKey: .uninstalled)
        try container.encodeIfPresent(peertubeEngine, forKey: .peertubeEngine)
        try container.encodeIfPresent(description, forKey: .description)
        try container.encodeIfPresent(homepage, forKey: .homepage)
        try container.encodeIfPresent(settings, forKey: .settings)
        try container.encodeIfPresent(createdAt, forKey: .createdAt)
        try container.encodeIfPresent(updatedAt, forKey: .updatedAt)
    }
}

