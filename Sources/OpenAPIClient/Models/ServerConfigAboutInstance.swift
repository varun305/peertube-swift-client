//
// ServerConfigAboutInstance.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation

public struct ServerConfigAboutInstance: Sendable, Codable, JSONEncodable, Hashable {

    public var name: String?
    public var shortDescription: String?
    public var description: String?
    public var terms: String?
    public var codeOfConduct: String?
    public var hardwareInformation: String?
    public var creationReason: String?
    public var moderationInformation: String?
    public var administrator: String?
    public var maintenanceLifetime: String?
    public var businessModel: String?
    public var languages: [String]?
    public var categories: [Int]?
    public var avatars: [ActorImage]?
    public var banners: [ActorImage]?

    public init(name: String? = nil, shortDescription: String? = nil, description: String? = nil, terms: String? = nil, codeOfConduct: String? = nil, hardwareInformation: String? = nil, creationReason: String? = nil, moderationInformation: String? = nil, administrator: String? = nil, maintenanceLifetime: String? = nil, businessModel: String? = nil, languages: [String]? = nil, categories: [Int]? = nil, avatars: [ActorImage]? = nil, banners: [ActorImage]? = nil) {
        self.name = name
        self.shortDescription = shortDescription
        self.description = description
        self.terms = terms
        self.codeOfConduct = codeOfConduct
        self.hardwareInformation = hardwareInformation
        self.creationReason = creationReason
        self.moderationInformation = moderationInformation
        self.administrator = administrator
        self.maintenanceLifetime = maintenanceLifetime
        self.businessModel = businessModel
        self.languages = languages
        self.categories = categories
        self.avatars = avatars
        self.banners = banners
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case name
        case shortDescription
        case description
        case terms
        case codeOfConduct
        case hardwareInformation
        case creationReason
        case moderationInformation
        case administrator
        case maintenanceLifetime
        case businessModel
        case languages
        case categories
        case avatars
        case banners
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(name, forKey: .name)
        try container.encodeIfPresent(shortDescription, forKey: .shortDescription)
        try container.encodeIfPresent(description, forKey: .description)
        try container.encodeIfPresent(terms, forKey: .terms)
        try container.encodeIfPresent(codeOfConduct, forKey: .codeOfConduct)
        try container.encodeIfPresent(hardwareInformation, forKey: .hardwareInformation)
        try container.encodeIfPresent(creationReason, forKey: .creationReason)
        try container.encodeIfPresent(moderationInformation, forKey: .moderationInformation)
        try container.encodeIfPresent(administrator, forKey: .administrator)
        try container.encodeIfPresent(maintenanceLifetime, forKey: .maintenanceLifetime)
        try container.encodeIfPresent(businessModel, forKey: .businessModel)
        try container.encodeIfPresent(languages, forKey: .languages)
        try container.encodeIfPresent(categories, forKey: .categories)
        try container.encodeIfPresent(avatars, forKey: .avatars)
        try container.encodeIfPresent(banners, forKey: .banners)
    }
}

