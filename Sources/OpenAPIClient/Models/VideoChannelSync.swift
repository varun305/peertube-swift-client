//
// VideoChannelSync.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation

public struct VideoChannelSync: Sendable, Codable, JSONEncodable, Hashable {

    public static let idRule = NumericRule<Int>(minimum: 1, exclusiveMinimum: false, maximum: nil, exclusiveMaximum: false, multipleOf: nil)
    public var id: Int?
    public var state: VideoChannelSyncState?
    public var externalChannelUrl: String?
    public var createdAt: Date?
    public var lastSyncAt: Date?
    public var channel: VideoChannel?

    public init(id: Int? = nil, state: VideoChannelSyncState? = nil, externalChannelUrl: String? = nil, createdAt: Date? = nil, lastSyncAt: Date? = nil, channel: VideoChannel? = nil) {
        self.id = id
        self.state = state
        self.externalChannelUrl = externalChannelUrl
        self.createdAt = createdAt
        self.lastSyncAt = lastSyncAt
        self.channel = channel
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case id
        case state
        case externalChannelUrl
        case createdAt
        case lastSyncAt
        case channel
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(id, forKey: .id)
        try container.encodeIfPresent(state, forKey: .state)
        try container.encodeIfPresent(externalChannelUrl, forKey: .externalChannelUrl)
        try container.encodeIfPresent(createdAt, forKey: .createdAt)
        try container.encodeIfPresent(lastSyncAt, forKey: .lastSyncAt)
        try container.encodeIfPresent(channel, forKey: .channel)
    }
}


@available(iOS 13, tvOS 13, watchOS 6, macOS 10.15, *)
extension VideoChannelSync: Identifiable {}
