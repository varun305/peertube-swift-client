//
// VideoStreamingPlaylistsHLS.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation

public struct VideoStreamingPlaylistsHLS: Sendable, Codable, JSONEncodable, Hashable {

    public var playlistUrl: String?
    public var segmentsSha256Url: String?
    /** Video files associated to this playlist.  The difference with the root `files` property is that these files are fragmented, so they can be used in this streaming playlist (HLS, etc.)  */
    public var files: [VideoFile]?
    public var redundancies: [VideoStreamingPlaylistsHLSRedundanciesInner]?

    public init(playlistUrl: String? = nil, segmentsSha256Url: String? = nil, files: [VideoFile]? = nil, redundancies: [VideoStreamingPlaylistsHLSRedundanciesInner]? = nil) {
        self.playlistUrl = playlistUrl
        self.segmentsSha256Url = segmentsSha256Url
        self.files = files
        self.redundancies = redundancies
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case playlistUrl
        case segmentsSha256Url
        case files
        case redundancies
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(playlistUrl, forKey: .playlistUrl)
        try container.encodeIfPresent(segmentsSha256Url, forKey: .segmentsSha256Url)
        try container.encodeIfPresent(files, forKey: .files)
        try container.encodeIfPresent(redundancies, forKey: .redundancies)
    }
}

