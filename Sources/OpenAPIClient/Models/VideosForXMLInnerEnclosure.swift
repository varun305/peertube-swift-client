//
// VideosForXMLInnerEnclosure.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation

/** main streamable file for the video */
public struct VideosForXMLInnerEnclosure: Sendable, Codable, JSONEncodable, Hashable {

    public enum ModelType: String, Sendable, Codable, CaseIterable {
        case applicationSlashXBittorrent = "application/x-bittorrent"
    }
    public var url: String?
    public var type: ModelType?
    public var length: Int?

    public init(url: String? = nil, type: ModelType? = nil, length: Int? = nil) {
        self.url = url
        self.type = type
        self.length = length
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case url
        case type
        case length
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(url, forKey: .url)
        try container.encodeIfPresent(type, forKey: .type)
        try container.encodeIfPresent(length, forKey: .length)
    }
}

